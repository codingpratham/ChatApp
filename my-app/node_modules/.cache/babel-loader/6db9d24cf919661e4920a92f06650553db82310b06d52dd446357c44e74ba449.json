{"ast":null,"code":"// import { createContext, useEffect, useState } from 'react';\n// import { onAuthStateChanged } from 'firebase/auth'; // Import onAuthStateChanged from firebase/auth\n// import { getAuth } from 'firebase/auth'; // Import getAuth to get the auth instance\n// import AuthContext from './AuthContext'; // Import the context you created\n\n// const auth = getAuth(); // Initialize the auth instance\n\n// export const AuthContextProvider = ({ children }) => {\n//     const [currentUser, setCurrentUser] = useState(null);\n\n//     useEffect(() => {\n//         const unsubscribe = onAuthStateChanged(auth, (user) => {\n//             setCurrentUser(user);\n//         });\n\n//         return () => unsubscribe();\n//     }, []);\n\n//     return (\n//         <AuthContext.Provider value={{ currentUser }}>\n//             {children}\n//         </AuthContext.Provider>\n//     );\n// };","map":{"version":3,"names":[],"sources":["C:/Users/pratham/OneDrive/Documents/GitHub/Chess.com-clone/my-app/src/context/AuthContext.js"],"sourcesContent":["// import { createContext, useEffect, useState } from 'react';\r\n// import { onAuthStateChanged } from 'firebase/auth'; // Import onAuthStateChanged from firebase/auth\r\n// import { getAuth } from 'firebase/auth'; // Import getAuth to get the auth instance\r\n// import AuthContext from './AuthContext'; // Import the context you created\r\n\r\n// const auth = getAuth(); // Initialize the auth instance\r\n\r\n// export const AuthContextProvider = ({ children }) => {\r\n//     const [currentUser, setCurrentUser] = useState(null);\r\n\r\n//     useEffect(() => {\r\n//         const unsubscribe = onAuthStateChanged(auth, (user) => {\r\n//             setCurrentUser(user);\r\n//         });\r\n\r\n//         return () => unsubscribe();\r\n//     }, []);\r\n\r\n//     return (\r\n//         <AuthContext.Provider value={{ currentUser }}>\r\n//             {children}\r\n//         </AuthContext.Provider>\r\n//     );\r\n// };\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}