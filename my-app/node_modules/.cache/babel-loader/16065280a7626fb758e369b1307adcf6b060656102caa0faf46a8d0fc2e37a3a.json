{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { doc, onSnapshot } from 'firebase/firestore';\nimport { AuthContext } from '../context/AuthContext';\nimport { db } from '../firebase';\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chats = () => {\n  _s();\n  const [chats, setChats] = useState([]);\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  useEffect(() => {\n    const getChats = () => {\n      const unsub = onSnapshot(doc(db, 'userChats', currentUser.uid), doc => {\n        var _doc$data;\n        console.log('Current data: ', doc.data());\n        const chatData = ((_doc$data = doc.data()) === null || _doc$data === void 0 ? void 0 : _doc$data.chats) || []; // Ensure chats is an array\n        setChats(chatData);\n      });\n      return unsub;\n    };\n    if (currentUser.uid) {\n      getChats();\n    }\n  }, [currentUser.uid]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(Chats, \"eXxQig5BaCIGxU142nLW6IWOEjo=\");\n_c = Chats;\nexport default Chats;\nvar _c;\n$RefreshReg$(_c, \"Chats\");","map":{"version":3,"names":["React","useState","useEffect","useContext","doc","onSnapshot","AuthContext","db","Fragment","_Fragment","jsxDEV","_jsxDEV","Chats","_s","chats","setChats","currentUser","getChats","unsub","uid","_doc$data","console","log","data","chatData","_c","$RefreshReg$"],"sources":["C:/Users/pratham/OneDrive/Documents/GitHub/Chess.com-clone/my-app/src/component/chats.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { doc, onSnapshot } from 'firebase/firestore';\r\nimport { AuthContext } from '../context/AuthContext';\r\nimport { db } from '../firebase';\r\n\r\nconst Chats = () => {\r\n  const [chats, setChats] = useState([]);\r\n  const { currentUser } = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    const getChats = () => {\r\n      const unsub = onSnapshot(doc(db, 'userChats', currentUser.uid), (doc) => {\r\n        console.log('Current data: ', doc.data());\r\n        const chatData = doc.data()?.chats || []; // Ensure chats is an array\r\n        setChats(chatData);\r\n      });\r\n\r\n      return unsub;\r\n    };\r\n\r\n    if (currentUser.uid) {\r\n      getChats();\r\n    }\r\n  }, [currentUser.uid]);\r\n\r\n  return (\r\n    <>\r\n      {/* <div className=\"chats\">\r\n        {Object.entries(chats).map((chat) => (\r\n          <div className=\"userchat\" key={chat[0]}>\r\n            <img src={chat[1].userInfo.photoURL} alt=\"\" />\r\n            <div className=\"userchatinfo\">\r\n              <span>{chat[1].userInfo.displayName}</span>\r\n              <p id=\"msg\">{chat[1].userInfo.lastMessage?.text}</p>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div> */}\r\n      \r\n    </>\r\n  );\r\n};\r\n\r\nexport default Chats;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC9D,SAASC,GAAG,EAAEC,UAAU,QAAQ,oBAAoB;AACpD,SAASC,WAAW,QAAQ,wBAAwB;AACpD,SAASC,EAAE,QAAQ,aAAa;AAAC,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM;IAAEe;EAAY,CAAC,GAAGb,UAAU,CAACG,WAAW,CAAC;EAE/CJ,SAAS,CAAC,MAAM;IACd,MAAMe,QAAQ,GAAGA,CAAA,KAAM;MACrB,MAAMC,KAAK,GAAGb,UAAU,CAACD,GAAG,CAACG,EAAE,EAAE,WAAW,EAAES,WAAW,CAACG,GAAG,CAAC,EAAGf,GAAG,IAAK;QAAA,IAAAgB,SAAA;QACvEC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAElB,GAAG,CAACmB,IAAI,CAAC,CAAC,CAAC;QACzC,MAAMC,QAAQ,GAAG,EAAAJ,SAAA,GAAAhB,GAAG,CAACmB,IAAI,CAAC,CAAC,cAAAH,SAAA,uBAAVA,SAAA,CAAYN,KAAK,KAAI,EAAE,CAAC,CAAC;QAC1CC,QAAQ,CAACS,QAAQ,CAAC;MACpB,CAAC,CAAC;MAEF,OAAON,KAAK;IACd,CAAC;IAED,IAAIF,WAAW,CAACG,GAAG,EAAE;MACnBF,QAAQ,CAAC,CAAC;IACZ;EACF,CAAC,EAAE,CAACD,WAAW,CAACG,GAAG,CAAC,CAAC;EAErB,oBACER,OAAA,CAAAF,SAAA,mBAaE,CAAC;AAEP,CAAC;AAACI,EAAA,CApCID,KAAK;AAAAa,EAAA,GAALb,KAAK;AAsCX,eAAeA,KAAK;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}