{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pratham\\\\OneDrive\\\\Documents\\\\GitHub\\\\Chess.com-clone\\\\my-app\\\\src\\\\component\\\\search.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport { collection, query, where, getDocs, getDoc, setDoc, doc, updateDoc, serverTimestamp } from 'firebase/firestore';\nimport { db } from '../firebase';\nimport { AuthContext } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Search = () => {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [user, setUser] = useState(null);\n  const [err, setErr] = useState(false);\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const handleSearch = async () => {\n    const q = query(collection(db, \"users\"), where(\"displayName\", \"==\", username));\n    try {\n      const querySnapshot = await getDocs(q);\n      querySnapshot.forEach(doc => {\n        setUser(doc.data());\n      });\n    } catch (err) {\n      setErr(true);\n    }\n  };\n  const handleKey = e => {\n    e.code === \"Enter\" && handleSearch();\n  };\n  const handleSelect = async () => {\n    //check whether the group(chats in firestore) exists, if not create\n    const combinedId = currentUser.uid > user.uid ? currentUser.uid + user.uid : user.uid + currentUser.uid;\n    try {\n      const res = await getDoc(doc(db, \"chats\", combinedId));\n      if (!res.exists()) {\n        //create a chat in chats collection\n        await setDoc(doc(db, \"chats\", combinedId), {\n          messages: []\n        });\n\n        //create user chats\n        await updateDoc(doc(db, \"userChats\", currentUser.uid), {\n          [combinedId + \".userInfo\"]: {\n            uid: user.uid,\n            displayName: user.displayName,\n            photoURL: user.photoURL\n          },\n          [combinedId + \".date\"]: serverTimestamp()\n        });\n        await updateDoc(doc(db, \"userChats\", user.uid), {\n          [combinedId + \".userInfo\"]: {\n            uid: currentUser.uid,\n            displayName: currentUser.displayName,\n            photoURL: currentUser.photoURL\n          },\n          [combinedId + \".date\"]: serverTimestamp()\n        });\n      }\n    } catch (err) {}\n    setUser(null);\n    setUsername(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchform\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Find a user\",\n        id: \"search\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        onKeyDown: handleKey,\n        value: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), err && /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }, this), user && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userchat\",\n      onClick: handleSelect,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: user.photoURL,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userchatinfo\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: user.displayName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(Search, \"ZXQzUE3EguMIuY/UQNcA26iC/M4=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useContext","useState","collection","query","where","getDocs","getDoc","setDoc","doc","updateDoc","serverTimestamp","db","AuthContext","jsxDEV","_jsxDEV","Search","_s","username","setUsername","user","setUser","err","setErr","currentUser","handleSearch","q","querySnapshot","forEach","data","handleKey","e","code","handleSelect","combinedId","uid","res","exists","messages","displayName","photoURL","className","children","type","placeholder","id","value","onChange","target","onKeyDown","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/pratham/OneDrive/Documents/GitHub/Chess.com-clone/my-app/src/component/search.jsx"],"sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport { collection, query, where, getDocs,getDoc, setDoc, doc, updateDoc, serverTimestamp } from 'firebase/firestore';\r\nimport { db } from '../firebase';\r\nimport { AuthContext } from '../context/AuthContext';\r\n\r\nconst Search = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [user, setUser] = useState(null);\r\n  const [err, setErr] = useState(false);\r\n\r\n  const { currentUser } = useContext(AuthContext);\r\n\r\n  const handleSearch = async () => {\r\n    const q = query(\r\n      collection(db, \"users\"),\r\n      where(\"displayName\", \"==\", username)\r\n    );\r\n\r\n    try {\r\n      const querySnapshot = await getDocs(q);\r\n      querySnapshot.forEach((doc) => {\r\n        setUser(doc.data());\r\n      });\r\n    } catch (err) {\r\n      setErr(true);\r\n    }\r\n  };\r\n\r\n  const handleKey = (e) => {\r\n    e.code === \"Enter\" && handleSearch();\r\n  };\r\n\r\n  const handleSelect = async () => {\r\n    //check whether the group(chats in firestore) exists, if not create\r\n    const combinedId =\r\n      currentUser.uid > user.uid\r\n        ? currentUser.uid + user.uid\r\n        : user.uid + currentUser.uid;\r\n    try {\r\n      const res = await getDoc(doc(db, \"chats\", combinedId));\r\n\r\n      if (!res.exists()) {\r\n        //create a chat in chats collection\r\n        await setDoc(doc(db, \"chats\", combinedId), { messages: [] });\r\n\r\n        //create user chats\r\n        await updateDoc(doc(db, \"userChats\", currentUser.uid), {\r\n          [combinedId + \".userInfo\"]: {\r\n            uid: user.uid,\r\n            displayName: user.displayName,\r\n            photoURL: user.photoURL,\r\n          },\r\n          [combinedId + \".date\"]: serverTimestamp(),\r\n        });\r\n\r\n        await updateDoc(doc(db, \"userChats\", user.uid), {\r\n          [combinedId + \".userInfo\"]: {\r\n            uid: currentUser.uid,\r\n            displayName: currentUser.displayName,\r\n            photoURL: currentUser.photoURL,\r\n          },\r\n          [combinedId + \".date\"]: serverTimestamp(),\r\n        });\r\n      }\r\n    } catch (err) {}\r\n\r\n    setUser(null);\r\n    setUsername(\"\")\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className=\"search\">\r\n      <div className=\"searchform\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Find a user\"\r\n          id=\"search\"\r\n          value={username}\r\n          onChange={(e) => setUsername(e.target.value)}\r\n          onKeyDown={handleKey}\r\n          value={user}\r\n        />\r\n      </div>\r\n      {err && <span>Not found</span>}\r\n      {user && (\r\n        <div className=\"userchat\" onClick={handleSelect}>\r\n          <img src={user.photoURL} alt=\"\" />\r\n          <div className=\"userchatinfo\">\r\n            <span>{user.displayName}</span>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}