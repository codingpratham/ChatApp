{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pratham\\\\OneDrive\\\\Documents\\\\GitHub\\\\Chess.com-clone\\\\my-app\\\\src\\\\context\\\\ChatContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useContext, useReducer } from \"react\";\nimport { AuthContext } from \"./AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ChatContext = /*#__PURE__*/createContext();\nexport const ChatContextProvider = ({\n  children\n}) => {\n  _s();\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const INITIAL_STATE = {\n    chatId: \"null\",\n    user: {}\n  };\n  const chatReducer = (state, action) => {\n    switch (action.type) {\n      case \"CHANGE_USER\":\n        return {\n          user: action.payload,\n          chatId: currentUser.uid > action.payload.uid ? currentUser.uid + action.payload.uid : action.payload.uid + currentUser.uid\n        };\n      default:\n        return state;\n    }\n  };\n  const [state, dispatch] = useReducer(chatReducer, INITIAL_STATE);\n  return /*#__PURE__*/_jsxDEV(ChatContext.Provider, {\n    value: {\n      data: state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatContextProvider, \"j7iuR1KHMw0ikD9YRG3aml+uPp8=\");\n_c = ChatContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ChatContextProvider\");","map":{"version":3,"names":["createContext","useContext","useReducer","AuthContext","jsxDEV","_jsxDEV","ChatContext","ChatContextProvider","children","_s","currentUser","INITIAL_STATE","chatId","user","chatReducer","state","action","type","payload","uid","dispatch","Provider","value","data","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/pratham/OneDrive/Documents/GitHub/Chess.com-clone/my-app/src/context/ChatContext.js"],"sourcesContent":["import { createContext, useContext, useReducer } from \"react\";\r\nimport { AuthContext } from \"./AuthContext\";\r\n\r\nexport const ChatContext = createContext();\r\n\r\nexport const ChatContextProvider = ({ children }) => {\r\n  const { currentUser } = useContext(AuthContext);\r\n\r\n  const INITIAL_STATE = {\r\n    chatId: \"null\",\r\n    user: {},\r\n  };\r\n\r\n  const chatReducer = (state, action) => {\r\n    switch (action.type) {\r\n      case \"CHANGE_USER\":\r\n        return {\r\n          user: action.payload,\r\n          chatId:\r\n            currentUser.uid > action.payload.uid\r\n              ? currentUser.uid + action.payload.uid\r\n              : action.payload.uid + currentUser.uid,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(chatReducer, INITIAL_STATE);\r\n\r\n  return (\r\n    <ChatContext.Provider value={{ data: state, dispatch }}>\r\n      {children}\r\n    </ChatContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,UAAU,QAAQ,OAAO;AAC7D,SAASC,WAAW,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMO,mBAAmB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACnD,MAAM;IAAEC;EAAY,CAAC,GAAGT,UAAU,CAACE,WAAW,CAAC;EAE/C,MAAMQ,aAAa,GAAG;IACpBC,MAAM,EAAE,MAAM;IACdC,IAAI,EAAE,CAAC;EACT,CAAC;EAED,MAAMC,WAAW,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;IACrC,QAAQA,MAAM,CAACC,IAAI;MACjB,KAAK,aAAa;QAChB,OAAO;UACLJ,IAAI,EAAEG,MAAM,CAACE,OAAO;UACpBN,MAAM,EACJF,WAAW,CAACS,GAAG,GAAGH,MAAM,CAACE,OAAO,CAACC,GAAG,GAChCT,WAAW,CAACS,GAAG,GAAGH,MAAM,CAACE,OAAO,CAACC,GAAG,GACpCH,MAAM,CAACE,OAAO,CAACC,GAAG,GAAGT,WAAW,CAACS;QACzC,CAAC;MACH;QACE,OAAOJ,KAAK;IAChB;EACF,CAAC;EAED,MAAM,CAACA,KAAK,EAAEK,QAAQ,CAAC,GAAGlB,UAAU,CAACY,WAAW,EAAEH,aAAa,CAAC;EAEhE,oBACEN,OAAA,CAACC,WAAW,CAACe,QAAQ;IAACC,KAAK,EAAE;MAAEC,IAAI,EAAER,KAAK;MAAEK;IAAS,CAAE;IAAAZ,QAAA,EACpDA;EAAQ;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAClB,EAAA,CA9BWF,mBAAmB;AAAAqB,EAAA,GAAnBrB,mBAAmB;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}